(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const d of o.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&l(d)}).observe(document,{childList:!0,subtree:!0});function f(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(e){if(e.ep)return;e.ep=!0;const o=f(e);fetch(e.href,o)}})();const b={BASE_URL:"/i-ching-divination-ai/",DEV:!1,MODE:"production",OPENROUTER_API_KEY:"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",PROD:!0,SSR:!1,VITE_OPENROUTER_API_KEY:"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"};var y={};console.log("=== 环境变量调试信息 ===");console.log("typeof import.meta:",typeof import.meta);typeof import.meta<"u"&&b?(console.log("import.meta.env 存在"),console.log("import.meta.env.OPENROUTER_API_KEY:","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"),console.log("import.meta.env.VITE_OPENROUTER_API_KEY:","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"),console.log("完整的 import.meta.env:",JSON.stringify(b,null,2))):(console.log("import.meta.env 不存在"),console.log("import.meta:",import.meta));try{console.log("=== process.env 信息 ==="),console.log("typeof process:",typeof process),typeof process<"u"&&y&&(console.log("process.env.OPENROUTER_API_KEY:","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"),console.log("process.env.VITE_OPENROUTER_API_KEY:","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"))}catch(a){console.log("无法访问 process.env:",a.message)}console.log("=== 调试结束 ===");const _={BASE_URL:"/i-ching-divination-ai/",DEV:!1,MODE:"production",OPENROUTER_API_KEY:"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",PROD:!0,SSR:!1,VITE_OPENROUTER_API_KEY:"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"};async function h(a,s){var g;const{guaName:f,yaoIndex:l}=s;console.log("=== deepseek-api.js 模块中的环境变量 ==="),console.log("typeof import.meta:",typeof import.meta),console.log("import.meta.env 是否存在:",typeof import.meta<"u"&&_);const e=typeof import.meta<"u"&&"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"||"";if(console.log("=== API密钥详细信息 ==="),console.log("API_KEY 获取结果:",e?"存在":"不存在"),console.log("API_KEY 长度:",e.length),console.log("API_KEY 前10个字符:",e.substring(0,10)+"..."),console.log("API_KEY 后10个字符:",e.length>10?"..."+e.substring(e.length-10):e),!e)throw new Error("OpenRouter API密钥未设置，请在.env.local文件中添加OPENROUTER_API_KEY=您的密钥");const o="https://openrouter.ai/api/v1/chat/completions",c={model:"deepseek/deepseek-chat-v3.1:free",messages:[{role:"system",content:`你是资深周易导师，对《周易》六十四卦及十翼有深入研究，擅长将古典智慧转化为现代可执行建议。回答时请使用地道简体中文，条理清晰，逻辑严谨。
当前用户抽得「${f}」，变爻为第${l}爻。请基于本卦、变爻以及卦辞、象辞、爻辞，结合上下卦（外卦、内卦）关系，给出精准解读，并提供可操作的建议。
输出格式必须是严格的JSON对象，不要包含任何JSON之外的内容，具体格式如下：
{
  "questionBackground": {"question": "问题文本"},
  "hexagramOverview": {"hexagram": "卦名", "xiangCi": "象辞", "guaCi": "卦辞", "yaoCi": "爻辞", "fortune": "吉/凶/中性", "keyHint": "关键提示"},
  "hexagramAnalysis": {"xiangCiInterpretation": "象辞解读", "guaCiEssence": "卦辞精要", "yaoCiAnalysis": "爻辞分析", "changedHexagramAnalysis": "变卦分析"},
  "problemAnalysis": {"analysis": "问题分析", "recommendations": ["建议1", "建议2", "建议3"]},
  "reminder": "温馨提醒"
}`},{role:"user",content:a}],max_tokens:2048,temperature:.7};console.log("请求体结构:",JSON.stringify(c,null,2)),console.log("请求体大小:",new Blob([JSON.stringify(c)]).size,"bytes"),console.log("是否包含system消息:",c.messages.some(t=>t.role==="system"));try{console.log("=== API请求前环境检查 ==="),console.log("当前URL:",window.location.href),console.log("是否在生产环境:",!0),console.log("=== 请求参数详情 ==="),console.log("请求URL:",o),console.log("请求模型:",c.model),console.log("Authorization头格式:",`Bearer ${e.substring(0,5)}...`);let t=`Bearer ${e}`;e.startsWith("Bearer ")&&(t=e,console.log("注意: API_KEY已经包含Bearer前缀")),console.log("最终使用的Authorization头:",t.substring(0,Math.min(15,t.length))+"...");const p={method:"POST",headers:{"Content-Type":"application/json",Authorization:t,"HTTP-Referer":window.location.origin||"https://i-ching-divination-ai","X-Title":"I-Ching Divination AI",Accept:"application/json"},body:JSON.stringify(c),credentials:"omit",referrerPolicy:"no-referrer-when-downgrade"};console.log("fetch选项:",JSON.stringify(p,(i,n)=>i==="body"?"...省略的请求体...":n,2));const r=await fetch(o,p);if(console.log("API响应状态码:",r.status),console.log("API响应头:",Object.fromEntries(r.headers.entries())),!r.ok){const i=r.clone();try{const n=await r.json();throw console.error("API错误详情:",n),new Error(`API调用失败: ${((g=n.error)==null?void 0:g.message)||`HTTP ${r.status}`}
详细信息: ${JSON.stringify(n)}`)}catch{const u=await i.text();throw console.error("无法解析的错误响应:",u),new Error(`API调用失败: 无法解析错误响应
状态码: ${r.status}
原始响应: ${u}`)}}const E=await r.json();let m;try{m=JSON.parse(E.choices[0].message.content)}catch(i){throw new Error("API返回的不是有效的JSON格式: "+i.message)}return m}catch(t){throw console.error("获取解读失败:",t),t}}window.getInterpretation=h;
